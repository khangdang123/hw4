
1)	No, the value of variable ‘a’ doesn’t change after the function call because the variable ‘a’ is an integer in which it’s immutable in Python. After the variable ‘a’ push into the stack, the value of variable ‘a’ is immutable and remain unchanged after the function call.  
2)	Yes, the value of variable ‘b’ does change after the function call because the variable ‘b’ is the list in which it’s mutable in Python. After the variable ‘b’ push into the stack, the value of variable ‘b’ is mutable and can be changed after the function call.In this case, variable ‘b’ points to the same list object,the change is also apparent outside the function.
3)	These functions differ because variable ‘a’ and variable ‘b’ have different objects in which variable ‘a’ has an integer and variable ‘b’ has the list. Different objects in Python might have different results, 'a' is an integer, which is immutable, whereas 'b' is a list, which is mutable.
